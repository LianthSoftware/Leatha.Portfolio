<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="resources_common_job_title" xml:space="preserve">
    <value>IT Software Developer</value>
  </data>
  <data name="resource_common_accepting_offers_label" xml:space="preserve">
    <value>Currently accepting offers!</value>
  </data>
  <data name="resource_common_contact_button" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="resource_common_download_button" xml:space="preserve">
    <value>Download CV</value>
  </data>
  <data name="resource_common_section_about_description_1_label" xml:space="preserve">
    <value>Hello! 😊</value>
  </data>
  <data name="resource_common_section_about_description_2_label" xml:space="preserve">
    <value>My name is David, and I am a seasoned developer with over 15 years of programming experience. I have a strong passion for C# and the entire .NET ecosystem, which I’ve made my primary choice for solving a wide range of problems and building solutions.</value>
  </data>
  <data name="resource_common_section_about_description_3_label" xml:space="preserve">
    <value>I’m always looking to grow — exploring new technologies, reading industry articles, and watching tech-focused videos.</value>
  </data>
  <data name="resource_common_section_about_description_4_label" xml:space="preserve">
    <value>Outside of coding, I enjoy sports and social activities. From Frisbee and netball to team events like laser tag, escape rooms, and pub gatherings, I like staying active and connecting with others. Still, sometimes I’m perfectly happy just relaxing on the couch and watching movies or playing games.</value>
  </data>
  <data name="resource_common_section_about_title" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="resource_common_years_subtitle" xml:space="preserve">
    <value>years old</value>
  </data>
  <data name="resource_common_show_more_button" xml:space="preserve">
    <value>Show more</value>
  </data>
  <data name="resource_common_show_more_total_label" xml:space="preserve">
    <value>(Total {0})</value>
  </data>
  <data name="resource_common_tech_table_years_label" xml:space="preserve">
    <value>(In years)</value>
  </data>
  
  
  
  <data name="resource_common_section_projects_title" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="resource_common_section_technologies_title" xml:space="preserve">
    <value>Technologies</value>
  </data>

  <data name="resource_common_tech_table_area_header" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="resource_common_tech_table_technology_header" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="resource_common_tech_table_experience_header" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="resource_common_tech_table_notes_header" xml:space="preserve">
    <value>Notes</value>
  </data>

  <data name="resource_common_tech_table_operating_systems_title" xml:space="preserve">
    <value>Operating Systems</value>
  </data>
  <data name="resource_common_tech_table_analysis_design_title" xml:space="preserve">
    <value>Analysis &amp; Design</value>
  </data>
  <data name="resource_common_tech_table_project_control_title" xml:space="preserve">
    <value>Project Control</value>
  </data>
  <data name="resource_common_tech_table_code_flow_title" xml:space="preserve">
    <value>Code Flow</value>
  </data>
  <data name="resource_common_tech_table_databases_title" xml:space="preserve">
    <value>Databases</value>
  </data>
  <data name="resource_common_tech_table_programming_languages_title" xml:space="preserve">
    <value>Programming Languages</value>
  </data>
  <data name="resource_common_tech_table_web_technologies_title" xml:space="preserve">
    <value>Web Technologies</value>
  </data>
  <data name="resource_common_tech_table_mobile_technologies_title" xml:space="preserve">
    <value>Mobile Technologies</value>
  </data>
  <data name="resource_common_tech_table_game_technologies_title" xml:space="preserve">
    <value>Game Technologies</value>
  </data>
  <data name="resource_common_tech_table_other_title" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="resource_common_tech_table_currently_learning_title" xml:space="preserve">
    <value>Currently Learning</value>
  </data>

  <data name="resource_common_tech_table_operating_systems_description" xml:space="preserve">
  <value>Windows for daily use; I also explore Linux out of curiosity.</value>
</data>
  <data name="resource_common_tech_table_analysis_design_description" xml:space="preserve">
  <value>Designing new features and analyzing issues and defects.</value>
</data>
  <data name="resource_common_tech_table_project_control_description" xml:space="preserve">
  <value>Project and collaboration tools supporting successful delivery.</value>
</data>
  <data name="resource_common_tech_table_code_flow_description" xml:space="preserve">
  <value>Started with SVN, moved to Git. Using Azure DevOps CI/CD pipelines on projects.</value>
</data>
  <data name="resource_common_tech_table_databases_description" xml:space="preserve">
  <value>Databases I’ve worked with—most commonly MongoDB and SQL Server (Entity Framework).</value>
</data>
  <data name="resource_common_tech_table_programming_languages_description" xml:space="preserve">
  <value>C# has been my favourite since early on. I’ve also worked with Java and Python, and spent a few years improving private World of Warcraft servers.</value>
</data>
  <data name="resource_common_tech_table_web_technologies_description" xml:space="preserve">
  <value>I’ve worked with many web technologies in the .NET ecosystem. I also write JavaScript by hand and prefer SASS over plain CSS.</value>
</data>
  <data name="resource_common_tech_table_mobile_technologies_description" xml:space="preserve">
  <value>I’ve also done mobile development across what .NET offers.</value>
</data>
  <data name="resource_common_tech_table_game_technologies_description" xml:space="preserve">
  <value>I’ve gained extensive experience in game development—early on with a World of Warcraft emulator; now I’m an avid Godot user.</value>
</data>
  <data name="resource_common_tech_table_other_description" xml:space="preserve">
  <value>I also know some “older” technologies like WPF and Windows Forms. My curiosity led me to IoT and, together with game development, to designing AI characters.</value>
</data>
  <data name="resource_common_tech_table_currently_learning_description" xml:space="preserve">
  <value>Always learning.</value>
</data>
</root>